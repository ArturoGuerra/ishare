name: Build and Release App

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
  workflow_dispatch:

jobs:
  release:
    runs-on: macos-13

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Certificate
        uses: apple-actions/import-codesign-certs@v2
        with: 
          p12-file-base64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          p12-password: ${{ secrets.P12_PASSWORD }}

      - name: Xcode Select Version
        uses: mobiledevops/xcode-select-version-action@v1
        with:
          xcode-select-version: 14.3.1

      - name: Build macOS app
        run: xcodebuild archive -scheme "ishare" -configuration "Release" -archivePath "build/ishare.xcarchive" -destination "platform=macOS"

      - name: Export .app from .xcarchive
        run: cp -R "build/ishare.xcarchive/Products/Applications/ishare.app" "build/"

      - name: Archive .app
        run: cd build && zip -r "ishare_macOS.zip" "ishare.app"

      - name: Set shortened SHA
        run: echo "SHORT=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.SHORT }}
          release_name: Commit ${{ env.SHORT }}
          generate_release_notes: true
          draft: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/ishare_macOS.zip
          asset_name: ishare_macOS.zip
          asset_content_type: application/zip
          
      - name: Download Sparkle and Generate appcast.xml
        run: |
          # Download Sparkle
          curl -L https://github.com/sparkle-project/Sparkle/releases/download/2.4.2/Sparkle-2.4.2.tar.xz | tar -xJ
          
          # Generate appcast.xml
          ./Sparkle-2.4.2/bin/generate_appcast ./build

      - name: Save appcast.xml as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: appcast
          path: ./build/appcast.xml
          
  appcast:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download appcast.xml artifact
        uses: actions/download-artifact@v2
        with:
          name: appcast
          path: ./
          
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: appcast
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
