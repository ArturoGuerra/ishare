name: Build and Release App

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-13

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Xcode Select Version
        uses: mobiledevops/xcode-select-version-action@v1
        with:
          xcode-select-version: 14.3.1
      - run: xcodebuild -version 

      - name: Build macOS app
        run: xcodebuild archive -scheme "ishare" -configuration "Debug" -archivePath "build/ishare.xcarchive" -destination "platform=macOS" SKIP_INSTALL=NO CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO

      - name: Package .app and create .zip
        run: |
          mkdir -p build/ishare.app
          cp -R "build/ishare.xcarchive/Products/Applications/ishare.app" "build/ishare.app"
          cd build
          zip -r "ishare_macOS.zip" "ishare.app"

      - name: Get previous release tag
        id: previous_release
        run: echo "::set-output name=tag::$(git describe --tags --abbrev=0)"

      - name: Get commit messages since latest release
        id: commit_messages
        run: |
          latest_tag="${{ steps.latest_tag.outputs.tag }}"
          if [ -z "$latest_tag" ]; then
            latest_tag=$(git rev-list --max-parents=0 HEAD)
          fi
          git log --pretty=format:"- %s" $latest_tag..HEAD > commits.txt
          echo "::set-output name=commits::$(cat commits.txt)"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_id }}
          release_name: Release v${{ github.run_id }}
          body: |
            Changes in this release:
            ${{ steps.commit_messages.outputs.commits }}
          draft: false
          prerelease: true

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/ishare_macOS.zip
          asset_name: ishare_macOS.zip
          asset_content_type: application/zip
