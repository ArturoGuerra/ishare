name: Build and Release App

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
  workflow_dispatch:
  
env:
  CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
  P12_PASSWORD_BASE64: ${{ secrets.P12_PASSWORD }}

jobs:
  build:
    runs-on: macos-13

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up macOS keychain
        run: |
          mkdir -p ~/Library/Keychains
          echo "${CERTIFICATE_BASE64}" | base64 --decode > certificate.p12
          echo "${P12_PASSWORD_BASE64}" | base64 --decode > password.txt
          security create-keychain -p mysecretpassword build.keychain
          security import certificate.p12 -P "$(cat password.txt)" -k ~/Library/Keychains/build.keychain -T /usr/bin/codesign
          security list-keychain -s ~/Library/Keychains/build.keychain
          security default-keychain -s ~/Library/Keychains/build.keychain

      - name: Xcode Select Version
        uses: mobiledevops/xcode-select-version-action@v1
        with:
          xcode-select-version: 14.3.1

      - name: Build macOS app (Unsigned)
        run: xcodebuild archive -scheme "ishare" -configuration "Release" -archivePath "build/ishare.xcarchive" -destination "platform=macOS"

      - name: Sign the .app
        run: |
          codesign --force --deep --sign "Apple Development: castdrian@gmail.com (M43MLSZ667)" "build/ishare.xcarchive/Products/Applications/ishare.app"

      - name: Package .app and create .zip
        run: |
          mkdir -p build/ishare.app
          cp -R "build/ishare.xcarchive/Products/Applications/ishare.app" "build/ishare.app"
          cd build
          zip -r "ishare_macOS.zip" "ishare.app"

      - name: Set shortened SHA
        run: echo "SHORT=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.SHORT }}
          release_name: Release ${{ env.SHORT }}
          generate_release_notes: true
          draft: false
          prerelease: true

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/ishare_macOS.zip
          asset_name: ishare_macOS.zip
          asset_content_type: application/zip
          
      - name: Clean up temporary files
        run: |
          security delete-keychain ~/Library/Keychains/build.keychain
          rm -rf "build/ishare.xcarchive"
          rm -f certificate.p12 password.txt
